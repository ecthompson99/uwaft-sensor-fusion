%% Load rosbag
% ADDINS NEEDED: 'Robotics System Toolbox' 

bag = rosbag('C:\Users\sophy\Documents\GitHub\kaiROS\sensor fusion testing\env_state.bag');

%% Filter info

% Select topics 
sel_targets = select(bag, 'Topic', 'target_obj'); 
sel_tracked = select(bag, 'Topic', 'tracked_obj'); 

% Read msgs into cells
target_struct = cell2mat(readMessages(sel_targets, 'DataFormat', 'struct'));
tracked_struct = cell2mat(readMessages(sel_tracked, 'DataFormat', 'struct'));

% Create Tables, sorted by ID (3rd col)
target_T = sortrows(struct2table(target_struct),3);
tracked_T = sortrows(struct2table(tracked_struct),3);

% Create array: ObjId,ObjDx,ObjLane,ObjVx,ObjDy,ObjAx,ObjPath,ObjVy,ObjTimestamp,ObjTrackNum 
target_A = table2array(tar_sorted(:,3:12));
tracked_A = table2array(track_sorted(:,3:12));

% Find unique objects & num of occurances
[target_obj,ia,target_c] = unique(target_A(:,1),'rows');
[tracked_obj,ib,tracked_c] = unique(tracked_A(:,1),'rows');

tracked_count = accumarray(target_c,1);
target_count = accumarray(tracked_c,1);

% convert to uint8 to array of doubles
target_counts = [double(target_obj), double(tracked_count)]; % show unique ObjId and num of occurances
tracked_counts = [double(tracked_obj), double(target_count)]; % show unique ObjId and num of occurances

%% Driving scenario for target objects

scenario = drivingScenario;

% create empty arrays for vehicles
targets = cell(size(targetIds,1),1);
waypoints = cell(size(targetIds,1),1);
speed_calc = cell(size(targetIds,1),1);

% construct a straight road segment 50 m in length.
road(scenario, [0 0 0; 50 0 0]);

temp = 1; % used to keep track of unique object
num_targets = double(target_count); % permanent array

for i = 1:size(targetIds,1)% loop through target_id 
    targets{i} = vehicle(scenario); % create target vehicle
    while temp <= num_targets{i}
        % Loop rows in target_A and specify trajectory for unique object
        waypoints{i} = [tar_array(:, 2) tar_array(:, 5)]; % take dx and dy in columns 2 and 5 of array
        speed_calc{i} = sqrt(double(tar_array(:, 4)).^2 + double(tar_array(:, 8)).^2); % take vx and vy in columns 6 and 7 of array
        
        temp = (temp + 1);
    end 
    
    trajectory(targets{i},waypoints{i},speed_calc{i})
end


% add a plot for debug
plot(s,'Centerline','on','Waypoints','on','RoadCenters','on')

% Start the simulation loop
while advance(s)
 %fprintf('The vehicle is located at %.2f m at t=%.0f ms\n', targets{1}.Position(1), s.SimulationTime*1000)
 pause(0.1)
end







