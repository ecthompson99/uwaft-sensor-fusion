clear
clc

% import CAN corner radar database
candb_cr = canDatabase("Bosch_XGU_CornerRadar.dbc");

% filter for left radar input and desired signals
left_radar = blfread("bve_testing_2019-11-08_13-25-36.blf",1,...
    "Database", candb_cr, "CANStandardFilter", (1285:1655));

% filter for right radar input and desired signals
% right_radar = blfread("bve_testing_2019-11-08_13-25-36.blf",2,...
%     "Database", candb_cr, "CANStandardFilter", (1285:1655));

left_time_sec = seconds(left_radar.Time);
%right_time_sec = seconds(right_radar.Time);
left_final = addvars(left_radar,left_time_sec);
%right_final = addvars(right_radar,right_time_sec);


%% Check validity of CAN frames

size_left_final = size(left_final);

for i = 1:size_left_final(1)
    % check A
    if i < size_left_final(1)
    if contains(left_final.Name(i),'_A'))
       if contains(left_final.Name(i+1),'_A') && ...
           contains(left_final.Name(i-1),'_B')
            left_final(i,:) = []; % remove row
            size_left_final = size_left_final - 1; % reduce size by 1
       end
    end
    
end


%left_A_idx = find(cellfun('length',regexp(left_final.Name,'_A')) == 1);
%left_B_idx = find(cellfun('length',regexp(left_final.Name,'_B')) == 1);
%right_A_idx = find(cellfun('length',regexp(right_final.Name,'_A')) == 1);
%right_B_idx = find(cellfun('length',regexp(right_final.Name,'_B')) == 1);

% Need to check both radars start with frame A



% left_A_count = 1;
% 
% while left_A_count <= size_left_radar(1)
%     name = char(left_final.Name(left_A_count));
%     if ~contains(name,'_A')
%         left_final(left_A_count-2,:) = []; % remove previous A frame
%     end
%     left_A_count = left_A_count + 2; % jump to next A frame
% end
% 



% fprintf('left final A \n');
% for i = 1:size(left_A_idx)
%     if ~mod(left_A_idx(i),2) == 1 % even
%         fprintf('%i\n', i)
%     end
% end

% % should be even (B)
% fprintf('left final B \n');
% for i = 1:size(left_B_idx)
%     left_B_idx = find(cellfun('length',regexp(left_final.Name,'_B')) == 1);
%     if mod(left_B_idx(i),2) == 1 % odd
%         fprintf('%i\n', i)
%         break
%     end
% end

% % should be odd (A)
% for i = 1:size(right_A_idx)
%     right_A_idx = find(cellfun('length',regexp(right_final.Name,'_A')) == 1);
%     if ~mod(right_A_idx(i),2) == 1 % even
%         right_final(i-1,:) = [];
%     end
% end
% 
% fprintf('right final A \n');
% for i = 1:size(right_A_idx)
%     right_A_idx = find(cellfun('length',regexp(right_final.Name,'_A')) == 1);
%     if ~mod(right_A_idx(i),2) == 1 % even
%         fprintf('%i\n', i)
%     end
% end
% % should be even (B)
% fprintf('right final B \n');
% for i = 1:size(right_B_idx)
%     if mod(right_B_idx(i),2) == 1 % odd
%         fprintf('%i\n', i)
%         break
%     end
% end

%% Save data    
%writetimetable(left_final,'left_corner_radar.xlsx','Sheet',1);
%writetimetable(right_final,'right_corner_radar.xlsx','Sheet',1);

%save('left_radar.mat');
%save('right_radar.mat');